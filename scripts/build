#!/usr/bin/env node
const fs = require('fs')
const fsPromises = require('fs/promises')
const crypto = require('crypto')

0 ||
  (async function () {
    await fsPromises.mkdir('./build', { recursive: true })

    const collections = await fsPromises.readdir('./collections')

    const areas = await Promise.all(
      collections.map(async (collection) => {
        const neighborhoodsSum = crypto.createHash('sha1')
        const neighborhoodsSourceFileName = `collections/${collection}/neighborhoods.json`

        neighborhoodsSum.update(
          await fsPromises.readFile(neighborhoodsSourceFileName),
        )

        const neighborhoodsDestinationFileName = `${neighborhoodsSum.digest(
          'hex',
        )}.json`

        await fsPromises.copyFile(
          neighborhoodsSourceFileName,
          `build/${neighborhoodsDestinationFileName}`,
        )

        const { displayName } = await fsPromises
          .readFile(`collections/${collection}/index.json`)
          .then((response) => JSON.parse(response))

        return {
          displayName,
          name: collection,
          neighborhoods: neighborhoodsDestinationFileName,
        }
      }),
    )

    fs.writeFileSync('build/v1.json', JSON.stringify({ areas }))
  })()
