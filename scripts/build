#!/usr/bin/env node
const fs = require('fs')
const fsPromises = require('fs/promises')
const crypto = require('crypto')

0 ||
  (async function () {
    await fsPromises.mkdir('./build', { recursive: true })

    const collections = await Promise.all(
      (await fsPromises.readdir('./collections')).map(
        async (collection) => {
          const neighborhoodsSum = crypto.createHash('sha1')
          const neighborhoodsSourceFileName = `collections/${collection}/neighborhoods.json`

          neighborhoodsSum.update(
            await fsPromises.readFile(neighborhoodsSourceFileName),
          )

          const neighborhoodsDestinationFileName = `${neighborhoodsSum.digest(
            'hex',
          )}.json`

          await fsPromises.copyFile(
            neighborhoodsSourceFileName,
            `build/${neighborhoodsDestinationFileName}`,
          )

          const { displayName } = await fsPromises
            .readFile(`collections/${collection}/index.json`)
            .then((response) => JSON.parse(response))

          return {
            displayName,
            name: collection,
            neighborhoods: neighborhoodsDestinationFileName,
          }
        },
      ),
    )

    fs.writeFileSync('build/v2.json', JSON.stringify({ collections }))
  })()
